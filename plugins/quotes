#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Simple quotes database with Python and SQLite3.
#
# Usage
# This script will read the environment variable 'IRC_NICKNAME' to set the
# 'author' column of new added quotes.
#
# To add a new quote:
# ./quotes ./my-db.sqlite add "non Ã¨ davvero funzionante"
#
# To get a random quote:
# ./quotes ./my-db.sqlite read
#
# To get the ID quote:
# ./quotes ./my-db.sqlite read <ID>
#
# Daniel Kertesz <daniel@spatof.org>
import os
import sys
from datetime import datetime
import sqlite3


def init_db(filename):
    """Initialize database connection and create SCHEMA if needed"""

    create = not os.path.exists(filename)
    create = True
    conn = sqlite3.connect(filename)

    if create:
        c = conn.cursor()
        c.execute('''CREATE TABLE if not exists quotes
        (id INTEGER NOT NULL, creation_date DATETIME, author VARCHAR, quote TEXT,
        karma INTEGER, PRIMARY KEY (id))''')
        conn.commit()

    return conn

def random_quote(conn, args=''):
    """Return a random quote from the database"""
    c = conn.cursor()

    if args:
        c.execute('SELECT * FROM quotes WHERE id=?', (args,))
    else:
        c.execute('SELECT * FROM quotes ORDER BY RANDOM() LIMIT 1;')
    row = c.fetchone()
    if not row:
        return 1

    col_names = [x[0] for x in c.description]
    result = {}
    for i, name in enumerate(col_names):
        result[name] = row[i]

    # print "results = %r" % result
    print result['quote'].encode('utf-8')


def add_quote(conn, author, quote):
    """Add a new quote to the database"""

    c = conn.cursor()

    now = datetime.now()
    if not isinstance(quote, unicode):
        quote = unicode(quote, 'utf-8')

    values = (now, author, quote, 0)
    c.execute('''INSERT INTO quotes(creation_date, author, quote, karma)
    VALUES (?, ?, ?, ?)''', values)
    conn.commit()
    _id = c.lastrowid
    print "Added quote %d" % int(_id)


def main():
    if len(sys.argv) < 3:
        print >>sys.stderr, "Usage: %s <db file> <command> [args...]" % (
            os.path.basename(sys.argv[0]))
        sys.exit(1)

    db_file = os.path.abspath(sys.argv[1])
    command = sys.argv[2]
    args = ' '.join(sys.argv[3:])

    conn = init_db(db_file)
    rv = 0
    if command == 'read':
        rv = random_quote(conn, args)
    elif command == 'add':
        if args:
            author = os.environ.get('IRC_NICKNAME', 'unknown')
            rv = add_quote(conn, author, args)

    conn.close()
    sys.exit(rv)

if __name__ == '__main__':
    main()
